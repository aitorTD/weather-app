---
import Layout from "../layouts/Layout.astro";

const title = "Weather App Map";
const apiKey = process.env.WEATHER_API_KEY;

// Get location from URL query parameters
const url = new URL(Astro.request.url);
const searchQuery = url.searchParams.get("location") || "Madrid";

// Default coordinates (will be updated with actual data)
let lat = 40.416775;
let lon = -3.703790;
let locationName = searchQuery;
let weatherData = null;

// Fetch weather data for the map
try {
  const response = await fetch(
    `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${encodeURIComponent(searchQuery)}&aqi=no`
  );
  
  if (response.ok) {
    const data = await response.json();
    lat = data.location.lat;
    lon = data.location.lon;
    locationName = data.location.name;
    weatherData = data.current;
  }
} catch (error) {
  console.error("Error fetching weather data:", error);
}
---

<Layout {title}>
  <div class="container mx-auto px-4 py-6">
    <h1 class="text-3xl font-bold mb-6 text-center text-gray-900 dark:text-white">
      Mapa del Tiempo: {locationName}
    </h1>
    
    <!-- Map container -->
    <div id="weather-map" class="h-[500px] w-full rounded-xl shadow-lg mb-6"></div>
    
    <!-- Weather info for the selected location -->
    {weatherData && (
      <div class="bg-white dark:bg-gray-800 p-6 rounded-xl shadow-md mb-6">
        <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white flex items-center">
          Clima actual en {locationName}
          <img src={weatherData.condition.icon} alt={weatherData.condition.text} class="ml-2 w-10 h-10" />
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div class="text-center p-3 bg-blue-50 dark:bg-gray-700 rounded-lg">
            <p class="text-sm text-gray-500 dark:text-gray-400">Temperatura</p>
            <p class="text-2xl font-bold text-blue-600 dark:text-blue-400">{weatherData.temp_c}°C</p>
          </div>
          <div class="text-center p-3 bg-blue-50 dark:bg-gray-700 rounded-lg">
            <p class="text-sm text-gray-500 dark:text-gray-400">Condición</p>
            <p class="text-lg font-medium text-gray-800 dark:text-gray-200">{weatherData.condition.text}</p>
          </div>
          <div class="text-center p-3 bg-blue-50 dark:bg-gray-700 rounded-lg">
            <p class="text-sm text-gray-500 dark:text-gray-400">Viento</p>
            <p class="text-lg font-medium text-gray-800 dark:text-gray-200">{weatherData.wind_kph} km/h</p>
          </div>
        </div>
      </div>
    )}
    
    <div class="text-center">
      <a href="/" class="inline-block px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
        Volver a la página principal
      </a>
    </div>
  </div>
</Layout>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" 
      integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" 
      crossorigin="" />

<!-- Leaflet JavaScript -->
<script is:inline src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" 
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" 
        crossorigin=""></script>

<script define:vars={{ lat, lon, locationName, weatherData }}>
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize the map
    const map = L.map('weather-map').setView([lat, lon], 10);
    
    // Add the OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);
    
    // Create a custom icon for the weather marker
    const weatherIcon = L.divIcon({
      html: `<div class="weather-marker">
              <img src="${weatherData.condition.icon}" alt="${weatherData.condition.text}" width="50" height="50">
              <span class="temp">${weatherData.temp_c}°C</span>
            </div>`,
      className: 'weather-icon-marker',
      iconSize: [60, 60],
      iconAnchor: [30, 30]
    });
    
    // Add a marker at the location with the weather icon
    const marker = L.marker([lat, lon], { icon: weatherIcon }).addTo(map);
    
    // Add a popup with weather information
    marker.bindPopup(`
      <div class="weather-popup">
        <h3>${locationName}</h3>
        <p><strong>${weatherData.condition.text}</strong></p>
        <p>Temperatura: ${weatherData.temp_c}°C</p>
        <p>Humedad: ${weatherData.humidity}%</p>
        <p>Viento: ${weatherData.wind_kph} km/h</p>
      </div>
    `).openPopup();
  });
</script>

<style>
  .weather-icon-marker {
    background: none;
    border: none;
  }
  
  .weather-marker {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  .weather-marker img {
    filter: drop-shadow(0 0 5px rgba(0,0,0,0.3));
  }
  
  .weather-marker .temp {
    background-color: #3b82f6;
    color: white;
    padding: 2px 6px;
    border-radius: 10px;
    font-weight: bold;
    font-size: 12px;
    margin-top: -5px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  }
  
  .weather-popup {
    text-align: center;
    padding: 5px;
  }
  
  .weather-popup h3 {
    margin: 0 0 5px 0;
    font-weight: bold;
  }
  
  .weather-popup p {
    margin: 3px 0;
  }
</style>